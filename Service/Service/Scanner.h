#pragma once
#ifndef SCANNER_H_
#define SCANNER_H_
#include <windows.h>
#include<string>
#include<vector>
#include<queue>
#include <thread>
#include"Process.h"
#include "Configuration.h"

using namespace std;

class Scanner
//purpose scan directory and walk onto directory tree.
// scanner can be paused and continued. =>It is needed a function which is used for pause, continue and stop.
//in scanner, malware signature is checked, malware detection is done. => It is needed set of function pointer, one is for signature check and other one is detection check. bu fonksiyonlar inputunda referans liste olur ve bulunan o etiketteki
//dosyalarý o listeye eklerler.
{
private:
	const string dir_name;
	queue<string> directories;
	vector<File> v;
	const string control_file;//scan edilen ve edilmeyenin yazildigi, nerede kaldiginin takip edildigi dosya
	bool *pause_cond;// this value can be changed by service. Service onPause fonksiyonu calistiginda bu pointer'in gösterdigi deger degisir. Oyle oldugunda tarama belli bir sure (wait) bekler. onCont de deger yine degisir.
	//bool *stop_cond; // bu deger gorunce control_file'e directories yazilir. constructor degerleri yazilir. Eger bu degerler var ise dosyada oradan decam eder.
	vector<Process*> whats_with_scanned_file;// it is a list of function for scanned files. The order of list is applied in order of application. bu listedeki fonksiyonlar sýrayla bulunan yazýlýmlara uygulanýr ve liste oluþturulur.
public:
	void static scan(const string dir_name, vector<File>& v, vector<Process*> p);
	//bool isScanned(string name, vector<File>& v);
	void scan();
	inline void pause() {
		*pause_cond = true;
	}
	inline void cont() {
		*pause_cond = false;
	}
	Scanner();
	Scanner(const string dn, const string cf): dir_name(dn), control_file(cf) {
		pause_cond = new bool;
		*pause_cond = true;

	}
	~Scanner() {
		delete pause_cond;
	}
};
#endif 

