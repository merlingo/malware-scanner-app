#include "GraphModel.h"


GraphModel::GraphModel()
{
}
GraphModel::GraphModel(size_t  e_size, Family f) : N(e_size), family(f)
{
	adj = Matrix<int>(N, N);
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++)
			adj[i][j] = 0;
	}
}
void GraphModel::addEdge(Opcode o1, Opcode o2) {
	if (find(nodelist.begin(), nodelist.end(), o1) == nodelist.end()) {
		nodelist.push_back(o1);
	}
	if (find(nodelist.begin(), nodelist.end(), o2) == nodelist.end()) {
		nodelist.push_back(o2);
	}
	adj[o1.order][o2.order] += 1;
	adj[o2.order][o1.order] += 1;
	//cout << (adj[o1.order][o2.order]) << endl;
}

GraphModel::~GraphModel()
{
}
